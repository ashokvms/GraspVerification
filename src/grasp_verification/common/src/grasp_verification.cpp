#include <grasp_verification/grasp_verification.h>


GraspVerification::GraspVerification()
{
	pMOG = new BackgroundSubtractorMOG(); //MOG approach
}

bool GraspVerification::verify_grasp(Mat &image) {

		Mat result; //fg mask generated by MOG method

		Mat baseImage = imread("/home/daniel/Documents/dev/eclipse/loadImage2/src/1.jpg", CV_BGR2GRAY); // Read the file

		pMOG->operator()(baseImage, result);
		pMOG->operator()(image, result);

		imshow("BK", result);
		waitKey(0);

		Mat hist;
		int histSize = 256;    // bin size
		float range[] = {0, 256};
		const float *ranges[] = {range};
		calcHist(&result, 1, 0, Mat(), hist, 1, &histSize, ranges, true, false);

		if (hist.at<float>(255) > 150)
		{
			return true;
		}

		return false;
	}
